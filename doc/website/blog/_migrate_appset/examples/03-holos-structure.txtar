# Work in the root of the example repo
cd ../script-01-clone/multi-sources-example

# 7ce4feb initialize the platform
exec bash -c 'bash -euo pipefail $WORK/holos-init.sh 2>&1'

# f7102d6 reorganize to conventional holos layout 
exec bash -c 'bash -euo pipefail $WORK/move-files-around.sh 2>&1'

# 49183ca git mv appsets/4-final/env-config config/environments
# Note, the v0.3.0 tag contains the environments.cue prior to being updated to
# fix the duplicated config.json file.  Commit 1a73e77b fixes this issue as a
# later migration step.
exec cat $WORK/environments-header.sh $WORK/environments.cue $WORK/environments-trailer.sh
stdin stdout
exec bash -xeuo pipefail

# Inspect the structure
exec bash -c 'bash -euo pipefail $WORK/inspect-environments.sh 2>&1'
cp stdout $WORK/inspect-environments.txt

-- holos-init.sh --
holos init platform v1alpha5 --force
-- move-files-around.sh --
# First, we'll move my-chart the original article vendored in
# Git to the conventional location Holos uses to vendor charts.
mkdir -p components/my-chart/vendor/0.1.0
git mv my-chart components/my-chart/vendor/0.1.0/my-chart

# Helm value files move into the directory that will contain
# my-chart component definition.  components/my-chart is
# conventionally called the "my-chart component directory"
git mv my-values components/my-chart/my-values

# The config.json files are moved without changing their folder structure.
# We'll package the data up into an "environments config package" for reuse.
mkdir config
git mv appsets/4-final/env-config config/environments

# All of our components will reside in the components directory so
# the CUE files `holos init` produced may be moved to keep the
# repository root tidy.
mv *.cue components/

# The following files and directories from the original article and
# holos init are no longer relevant after the migration.
mkdir not-used
git mv appsets not-used/appsets
git mv example-apps not-used/example-apps
rm -f platform.metadata.json

# Make the commit
git add platform components cue.mod .gitignore
git commit -m 'reorganize to conventional holos layout'
-- environments-header.sh --
cat <<'EOF' > config/environments/environments.cue
-- environments.cue --
@extern(embed)
package environments

// We use cue embed functionality as an equivalent replacement for
// ApplicationSet generators.
config: _ @embed(glob=*/config.json)
config: _ @embed(glob=staging/*/config.json)
config: _ @embed(glob=prod/*/config.json)
config: _ @embed(glob=integration/*/config.json)

// With CUE we can constrain the data with a schema.
config: [FILEPATH=string]: #Config

// #Config defines the schema of each config.json file.
#Config: {
	env:     "qa" | "integration-gpu" | "integration-non-gpu" | "staging-us" | "staging-eu" | "prod-us" | "prod-eu"
	region:  "us" | "eu"
	type:    "prod" | "non-prod"
	version: "qa" | "staging" | "prod"
	chart:   =~"^[0-9]+\\.[0-9]+\\.[0-9]+$"
}
-- environments-trailer.sh --
EOF
-- inspect-environments.sh --
CUE_EXPERIMENT=embed holos cue export --out=yaml \
  ./config/environments
