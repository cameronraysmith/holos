// @generated by protoc-gen-connect-query v1.3.1 with parameter "target=ts"
// @generated from file holos/platform/v1alpha1/platform.proto (package holos.platform.v1alpha1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { MethodKind } from "@bufbuild/protobuf";
import { AddPlatformRequest, AddPlatformResponse, GetFormRequest, GetFormResponse, GetModelRequest, GetModelResponse, GetPlatformRequest, GetPlatformResponse, ListPlatformsRequest, ListPlatformsResponse, PutFormRequest, PutFormResponse, PutModelRequest, PutModelResponse } from "./platform_pb.js";

/**
 * @generated from rpc holos.platform.v1alpha1.PlatformService.AddPlatform
 */
export const addPlatform = {
  localName: "addPlatform",
  name: "AddPlatform",
  kind: MethodKind.Unary,
  I: AddPlatformRequest,
  O: AddPlatformResponse,
  service: {
    typeName: "holos.platform.v1alpha1.PlatformService"
  }
} as const;

/**
 * @generated from rpc holos.platform.v1alpha1.PlatformService.GetPlatform
 */
export const getPlatform = {
  localName: "getPlatform",
  name: "GetPlatform",
  kind: MethodKind.Unary,
  I: GetPlatformRequest,
  O: GetPlatformResponse,
  service: {
    typeName: "holos.platform.v1alpha1.PlatformService"
  }
} as const;

/**
 * @generated from rpc holos.platform.v1alpha1.PlatformService.ListPlatforms
 */
export const listPlatforms = {
  localName: "listPlatforms",
  name: "ListPlatforms",
  kind: MethodKind.Unary,
  I: ListPlatformsRequest,
  O: ListPlatformsResponse,
  service: {
    typeName: "holos.platform.v1alpha1.PlatformService"
  }
} as const;

/**
 * @generated from rpc holos.platform.v1alpha1.PlatformService.GetForm
 */
export const getForm = {
  localName: "getForm",
  name: "GetForm",
  kind: MethodKind.Unary,
  I: GetFormRequest,
  O: GetFormResponse,
  service: {
    typeName: "holos.platform.v1alpha1.PlatformService"
  }
} as const;

/**
 * @generated from rpc holos.platform.v1alpha1.PlatformService.PutForm
 */
export const putForm = {
  localName: "putForm",
  name: "PutForm",
  kind: MethodKind.Unary,
  I: PutFormRequest,
  O: PutFormResponse,
  service: {
    typeName: "holos.platform.v1alpha1.PlatformService"
  }
} as const;

/**
 * @generated from rpc holos.platform.v1alpha1.PlatformService.GetModel
 */
export const getModel = {
  localName: "getModel",
  name: "GetModel",
  kind: MethodKind.Unary,
  I: GetModelRequest,
  O: GetModelResponse,
  service: {
    typeName: "holos.platform.v1alpha1.PlatformService"
  }
} as const;

/**
 * @generated from rpc holos.platform.v1alpha1.PlatformService.PutModel
 */
export const putModel = {
  localName: "putModel",
  name: "PutModel",
  kind: MethodKind.Unary,
  I: PutModelRequest,
  O: PutModelResponse,
  service: {
    typeName: "holos.platform.v1alpha1.PlatformService"
  }
} as const;
