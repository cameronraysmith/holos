// @generated by protoc-gen-es v1.9.0 with parameter "target=ts"
// @generated from file holos/user/v1alpha1/user.proto (package holos.user.v1alpha1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import { Detail, Subject } from "../../object/v1alpha1/object_pb.js";

/**
 * User represents a human user of the system.
 *
 * @generated from message holos.user.v1alpha1.User
 */
export class User extends Message<User> {
  /**
   * Unique uuid assigned by the server.
   *
   * @generated from field: optional string id = 1;
   */
  id?: string;

  /**
   * Subject represents the oidc iss and sub claims of the user.
   *
   * @generated from field: optional holos.object.v1alpha1.Subject subject = 2;
   */
  subject?: Subject;

  /**
   * Email address of the user.
   *
   * @generated from field: string email = 3;
   */
  email = "";

  /**
   * True if the user email has been verified.
   *
   * @generated from field: optional bool email_verified = 4;
   */
  emailVerified?: boolean;

  /**
   * Full name provided by the user.
   *
   * @generated from field: optional string name = 5;
   */
  name?: string;

  /**
   * Given or first name of the user.
   *
   * @generated from field: optional string given_name = 6;
   */
  givenName?: string;

  /**
   * Family or last name of the user.
   *
   * @generated from field: optional string family_name = 7;
   */
  familyName?: string;

  /**
   * Groups the user is a member of.  This field represents the oidc groups
   * claim.
   *
   * @generated from field: repeated string groups = 8;
   */
  groups: string[] = [];

  /**
   * https url to an user avatar profile picture.  Should be at least a 200x200 px square image.
   *
   * @generated from field: optional string picture = 9;
   */
  picture?: string;

  /**
   * Detail applicable to all resource objects in the system such as created and
   * updated metadata.
   *
   * @generated from field: optional holos.object.v1alpha1.Detail detail = 10;
   */
  detail?: Detail;

  constructor(data?: PartialMessage<User>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "holos.user.v1alpha1.User";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 2, name: "subject", kind: "message", T: Subject, opt: true },
    { no: 3, name: "email", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "email_verified", kind: "scalar", T: 8 /* ScalarType.BOOL */, opt: true },
    { no: 5, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 6, name: "given_name", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 7, name: "family_name", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 8, name: "groups", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 9, name: "picture", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 10, name: "detail", kind: "message", T: Detail, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): User {
    return new User().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): User {
    return new User().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): User {
    return new User().fromJsonString(jsonString, options);
  }

  static equals(a: User | PlainMessage<User> | undefined, b: User | PlainMessage<User> | undefined): boolean {
    return proto3.util.equals(User, a, b);
  }
}

