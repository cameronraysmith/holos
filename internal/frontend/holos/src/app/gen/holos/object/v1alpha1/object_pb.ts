// @generated by protoc-gen-es v1.9.0 with parameter "target=ts"
// @generated from file holos/object/v1alpha1/object.proto (package holos.object.v1alpha1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3, Timestamp } from "@bufbuild/protobuf";

/**
 * @generated from message holos.object.v1alpha1.Detail
 */
export class Detail extends Message<Detail> {
  /**
   * Created by entity
   *
   * @generated from field: optional holos.object.v1alpha1.ResourceEditor created_by = 1;
   */
  createdBy?: ResourceEditor;

  /**
   * Created at timestamp
   *
   * @generated from field: google.protobuf.Timestamp created_at = 2;
   */
  createdAt?: Timestamp;

  /**
   * Updated by entity
   *
   * @generated from field: optional holos.object.v1alpha1.ResourceEditor updated_by = 3;
   */
  updatedBy?: ResourceEditor;

  /**
   * Updated at timestamp
   *
   * @generated from field: google.protobuf.Timestamp updated_at = 4;
   */
  updatedAt?: Timestamp;

  constructor(data?: PartialMessage<Detail>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "holos.object.v1alpha1.Detail";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "created_by", kind: "message", T: ResourceEditor, opt: true },
    { no: 2, name: "created_at", kind: "message", T: Timestamp },
    { no: 3, name: "updated_by", kind: "message", T: ResourceEditor, opt: true },
    { no: 4, name: "updated_at", kind: "message", T: Timestamp },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Detail {
    return new Detail().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Detail {
    return new Detail().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Detail {
    return new Detail().fromJsonString(jsonString, options);
  }

  static equals(a: Detail | PlainMessage<Detail> | undefined, b: Detail | PlainMessage<Detail> | undefined): boolean {
    return proto3.util.equals(Detail, a, b);
  }
}

/**
 * Subject represents the oidc iss and sub claims which uniquely identify a subject.
 *
 * @generated from message holos.object.v1alpha1.Subject
 */
export class Subject extends Message<Subject> {
  /**
   * iss represents the oidc id token iss claim.  Limits defined at
   * https://openid.net/specs/openid-authentication-1_1.html#limits
   *
   * @generated from field: string iss = 1;
   */
  iss = "";

  /**
   * sub represents the oidc id token sub claim.
   *
   * @generated from field: string sub = 2;
   */
  sub = "";

  constructor(data?: PartialMessage<Subject>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "holos.object.v1alpha1.Subject";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "iss", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "sub", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Subject {
    return new Subject().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Subject {
    return new Subject().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Subject {
    return new Subject().fromJsonString(jsonString, options);
  }

  static equals(a: Subject | PlainMessage<Subject> | undefined, b: Subject | PlainMessage<Subject> | undefined): boolean {
    return proto3.util.equals(Subject, a, b);
  }
}

/**
 * UserRef refers to a User by uuid, email, or by the oidc iss and sub claims.
 *
 * @generated from message holos.object.v1alpha1.UserRef
 */
export class UserRef extends Message<UserRef> {
  /**
   * @generated from oneof holos.object.v1alpha1.UserRef.user
   */
  user: {
    /**
     * @generated from field: string user_id = 1;
     */
    value: string;
    case: "userId";
  } | {
    /**
     * @generated from field: string email = 2;
     */
    value: string;
    case: "email";
  } | {
    /**
     * @generated from field: holos.object.v1alpha1.Subject subject = 3;
     */
    value: Subject;
    case: "subject";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<UserRef>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "holos.object.v1alpha1.UserRef";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "user_id", kind: "scalar", T: 9 /* ScalarType.STRING */, oneof: "user" },
    { no: 2, name: "email", kind: "scalar", T: 9 /* ScalarType.STRING */, oneof: "user" },
    { no: 3, name: "subject", kind: "message", T: Subject, oneof: "user" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UserRef {
    return new UserRef().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UserRef {
    return new UserRef().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UserRef {
    return new UserRef().fromJsonString(jsonString, options);
  }

  static equals(a: UserRef | PlainMessage<UserRef> | undefined, b: UserRef | PlainMessage<UserRef> | undefined): boolean {
    return proto3.util.equals(UserRef, a, b);
  }
}

/**
 * Organization represents the ways in which a organization may be uniquely identified in the system.
 *
 * @generated from message holos.object.v1alpha1.OrganizationRef
 */
export class OrganizationRef extends Message<OrganizationRef> {
  /**
   * @generated from oneof holos.object.v1alpha1.OrganizationRef.org
   */
  org: {
    /**
     * @generated from field: string org_id = 1;
     */
    value: string;
    case: "orgId";
  } | {
    /**
     * @generated from field: string org_name = 2;
     */
    value: string;
    case: "orgName";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<OrganizationRef>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "holos.object.v1alpha1.OrganizationRef";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "org_id", kind: "scalar", T: 9 /* ScalarType.STRING */, oneof: "org" },
    { no: 2, name: "org_name", kind: "scalar", T: 9 /* ScalarType.STRING */, oneof: "org" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): OrganizationRef {
    return new OrganizationRef().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): OrganizationRef {
    return new OrganizationRef().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): OrganizationRef {
    return new OrganizationRef().fromJsonString(jsonString, options);
  }

  static equals(a: OrganizationRef | PlainMessage<OrganizationRef> | undefined, b: OrganizationRef | PlainMessage<OrganizationRef> | undefined): boolean {
    return proto3.util.equals(OrganizationRef, a, b);
  }
}

/**
 * ResourceEditor represents the entity that most recently created or edited a resource.
 *
 * @generated from message holos.object.v1alpha1.ResourceEditor
 */
export class ResourceEditor extends Message<ResourceEditor> {
  /**
   * @generated from oneof holos.object.v1alpha1.ResourceEditor.editor
   */
  editor: {
    /**
     * @generated from field: string user_id = 1;
     */
    value: string;
    case: "userId";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<ResourceEditor>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "holos.object.v1alpha1.ResourceEditor";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "user_id", kind: "scalar", T: 9 /* ScalarType.STRING */, oneof: "editor" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ResourceEditor {
    return new ResourceEditor().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ResourceEditor {
    return new ResourceEditor().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ResourceEditor {
    return new ResourceEditor().fromJsonString(jsonString, options);
  }

  static equals(a: ResourceEditor | PlainMessage<ResourceEditor> | undefined, b: ResourceEditor | PlainMessage<ResourceEditor> | undefined): boolean {
    return proto3.util.equals(ResourceEditor, a, b);
  }
}

/**
 * @generated from message holos.object.v1alpha1.ResourceOwner
 */
export class ResourceOwner extends Message<ResourceOwner> {
  /**
   * @generated from oneof holos.object.v1alpha1.ResourceOwner.resource_owner
   */
  resourceOwner: {
    /**
     * @generated from field: string org_id = 1;
     */
    value: string;
    case: "orgId";
  } | {
    /**
     * @generated from field: string user_id = 2;
     */
    value: string;
    case: "userId";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<ResourceOwner>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "holos.object.v1alpha1.ResourceOwner";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "org_id", kind: "scalar", T: 9 /* ScalarType.STRING */, oneof: "resource_owner" },
    { no: 2, name: "user_id", kind: "scalar", T: 9 /* ScalarType.STRING */, oneof: "resource_owner" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ResourceOwner {
    return new ResourceOwner().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ResourceOwner {
    return new ResourceOwner().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ResourceOwner {
    return new ResourceOwner().fromJsonString(jsonString, options);
  }

  static equals(a: ResourceOwner | PlainMessage<ResourceOwner> | undefined, b: ResourceOwner | PlainMessage<ResourceOwner> | undefined): boolean {
    return proto3.util.equals(ResourceOwner, a, b);
  }
}

