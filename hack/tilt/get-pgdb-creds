#! /bin/bash
#
tmpdir="$(mktemp -d)"
finish() {
  code=$?
  if [[ $code -gt 10 ]]; then
    jq . "${tmpdir}/creds.json"
    echo "could not update pg password: jq got null on line $code" >&2
  fi
  rm -rf "$tmpdir"
  exit $code
}
trap finish EXIT

set -euo pipefail

umask 077

if [[ $(uname) != Darwin ]]; then
  pbcopy() {
    xsel --input --clipboard
    xsel --output --clipboard | xsel --input --primary
  }
fi

kubectl get secret "${1}-pguser-${2}" -o json > "${tmpdir}/creds.json"

export PGDATABASE="$(jq --exit-status -r '.data | map_values(@base64d) | .dbname' ${tmpdir}/creds.json || exit $LINENO)"
export PGUSER="$(jq --exit-status -r '.data | map_values(@base64d) | .user' ${tmpdir}/creds.json || exit $LINENO)"
export PGPASSWORD="$(jq --exit-status -r '.data | map_values(@base64d) | .password' ${tmpdir}/creds.json || exit $LINENO)"

prefix="${PGHOST}:${PGPORT}:${PGDATABASE}:${PGUSER}"
if [[ -f ~/.pgpass ]]; then
  (grep -v "^${prefix}:" ~/.pgpass || true) > "${tmpdir}/pgpass"
fi
echo "${prefix}:${PGPASSWORD}" >> "${tmpdir}/pgpass"
cp "${tmpdir}/pgpass" ~/.pgpass
echo "updated: ${HOME}/.pgpass" >&2
cat <<EOF >&2

## Connect from a localhost shell through the port forward to the cluster
export PGHOST=${PGHOST}
export PGPORT=${PGPORT}
export PGDATABASE=${PGDATABASE}
export PGUSER=${PGUSER}

psql -c '\conninfo'
EOF
psql --host=${PGHOST} --port=${PGPORT} ${PGDATABASE} -c '\conninfo'

# n.b. do not send a trailing newline to xsel
echo -n "$PGPASSWORD" | pbcopy
echo "password: copied to clipboard."
