syntax = "proto3";

package holos.v1alpha1;

option go_package = "github.com/holos-run/holos/service/gen/holos/v1alpha1;holos";

import "google/protobuf/timestamp.proto";
// git clone https://github.com/bufbuild/protovalidate then add <parent>/protovalidate/proto/protovalidate to your editor proto search path
import "buf/validate/validate.proto";

// For validation, see the [Standard constraints](https://github.com/bufbuild/protovalidate/blob/main/docs/standard-constraints.md)

message Timestamps {
  // Created at timestamp
  google.protobuf.Timestamp created_at = 1 [(buf.validate.field).timestamp.lt_now = true];
  // Updated at timestamp
  google.protobuf.Timestamp updated_at = 2 [(buf.validate.field).timestamp.lt_now = true];
}

// User represents a human user in the system.  See db schema in ent/schema/user.go
message User {
  // Unique id assigned by the server.
  string id = 1 [(buf.validate.field).string.uuid = true];
  string email = 2 [(buf.validate.field).string.email = true];
  bool email_verified = 3;
  string name = 4 [(buf.validate.field).string.max_len = 100];
  Timestamps timestamps = 5;
}

message RegisterUserRequest {
  optional string name = 1 [(buf.validate.field).string.max_len = 100];
}

message RegisterUserResponse {
  User user = 1;
  bool already_exists = 2;
}

// Empty request, claims are pulled from the id token
message GetUserClaimsRequest {}

// UserClaims represents id token claims
message GetUserClaimsResponse {
  string iss = 1;
  string sub = 2;
  string email = 3 [(buf.validate.field).string.email = true];
  bool email_verified = 4;
  string name = 5 [(buf.validate.field).string.max_len = 100];
}

service UserService {
  rpc RegisterUser(RegisterUserRequest) returns (RegisterUserResponse) {}
  rpc GetUserClaims(GetUserClaimsRequest) returns (GetUserClaimsResponse) {}
}
