syntax = "proto3";

package holos.v1alpha1;

option go_package = "github.com/holos-run/holos/service/gen/holos/v1alpha1;holos";

import "google/protobuf/timestamp.proto";
// git clone https://github.com/bufbuild/protovalidate then add <parent>/protovalidate/proto/protovalidate to your editor proto search path
import "buf/validate/validate.proto";
import "holos/v1alpha1/timestamps.proto";

// For validation, see the [Standard constraints](https://github.com/bufbuild/protovalidate/blob/main/docs/standard-constraints.md)

// User represents a human user in the system.  See db schema in ent/schema/user.go
message User {
  // Unique id assigned by the server.
  string id = 1 [(buf.validate.field).string.uuid = true];
  string email = 2 [(buf.validate.field).string.email = true];
  bool email_verified = 3;
  string name = 4 [(buf.validate.field).string.max_len = 100];
  Timestamps timestamps = 5;
}

message CreateCallerUserRequest {}

message CreateCallerUserResponse {
  User user = 1;
}

message GetCallerClaimsRequest {}

message Claims {
  string iss = 1;
  string sub = 2;
  string email = 3 [(buf.validate.field).string.email = true];
  bool email_verified = 4;
  string name = 5 [(buf.validate.field).string.max_len = 100];
  repeated string groups = 6;
}

// UserClaims represents id token claims
message GetCallerClaimsResponse {
  Claims claims = 1;
}

// Empty request, claims are pulled from the id token
message GetCallerUserRequest {}

message GetCallerUserResponse {
  User user = 1;
}

service UserService {
  rpc GetCallerClaims(GetCallerClaimsRequest) returns (GetCallerClaimsResponse) {}
  rpc GetCallerUser(GetCallerUserRequest) returns (GetCallerUserResponse) {}
  rpc CreateCallerUser(CreateCallerUserRequest) returns (CreateCallerUserResponse) {}
}
