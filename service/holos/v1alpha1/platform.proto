syntax = "proto3";

package holos.v1alpha1;

option go_package = "github.com/holos-run/holos/service/gen/holos/v1alpha1;holos";

// git clone https://github.com/bufbuild/protovalidate then add <parent>/protovalidate/proto/protovalidate to your editor proto search path
import "buf/validate/validate.proto";
import "holos/v1alpha1/timestamps.proto";
import "holos/v1alpha1/organization.proto";
import "holos/v1alpha1/user.proto";

// For validation, see the [Standard constraints](https://github.com/bufbuild/protovalidate/blob/main/docs/standard-constraints.md)

message Config {
  bytes form = 1;
  bytes values = 2;
  bytes cue = 3;
  string definition = 4;
}

message Platform {
  // Unique id assigned by the server.
  string id = 1;
  Timestamps timestamps = 2;

  // Organization ID resource owner.
  string org_id = 3 [(buf.validate.field).string.uuid = true];
  // name is the platform short name as a dns label.
  string name = 4 [(buf.validate.field).string.max_len = 100];
  string display_name = 5 [(buf.validate.field).string.max_len = 100];
  Creator creator = 6;
  Config config = 7;
}

message GetPlatformsRequest {
  string org_id = 1 [(buf.validate.field).string.uuid = true];
}

message GetPlatformsResponse {
  repeated Platform platforms = 2;
}

message AddPlatformRequest {
  Platform platform = 1;
}

service PlatformService {
  rpc GetPlatforms(GetPlatformsRequest) returns (GetPlatformsResponse) {}
  rpc AddPlatform(AddPlatformRequest) returns (GetPlatformsResponse) {}
}
