syntax = "proto3";

package holos.v1alpha1;

option go_package = "github.com/holos-run/holos/service/gen/holos/v1alpha1;holos";

// git clone https://github.com/bufbuild/protovalidate then add <parent>/protovalidate/proto/protovalidate to your editor proto search path
import "buf/validate/validate.proto";
import "holos/v1alpha1/timestamps.proto";
import "holos/v1alpha1/organization.proto";
import "holos/v1alpha1/user.proto";
import "google/protobuf/any.proto";
import "google/protobuf/struct.proto";

// For validation, see the [Standard constraints](https://github.com/bufbuild/protovalidate/blob/main/docs/standard-constraints.md)

// RawConfig represents the raw form configuration as opaque bytes.  Used for input.
message RawConfig {
  bytes form = 1;
  bytes values = 2;
  bytes cue = 3;
  string definition = 4;
}

message Config {
  PlatformForm form = 1;
  // Values are the user supplied config values organized by section.
  ConfigValues values = 2;
}

message ConfigSection {
  map<string, google.protobuf.Value> fields = 1;
}

// ConfigValues represents user defined configuration values.
message ConfigValues {
  map<string, ConfigSection> sections = 1;
}

message Platform {
  // Unique id assigned by the server.
  string id = 1;
  Timestamps timestamps = 2;

  // Organization ID resource owner.
  string org_id = 3 [(buf.validate.field).string.uuid = true];
  // name is the platform short name as a dns label.
  string name = 4 [(buf.validate.field).string.max_len = 100];
  string display_name = 5 [(buf.validate.field).string.max_len = 100];
  Creator creator = 6;
  // config represents the platform config form and values.  Read only.
  Config config = 7;
  // raw_config represents the platform config form and values.  Write only.
  RawConfig raw_config = 8;
}

message FieldConfigProps {
  string label = 1;
  string placeholder = 2;
  string description = 3;
  bool required = 4;
}

message FieldConfig {
  string key = 1;
  string type = 2;
  FieldConfigProps props = 3;
}

message ConfigFormSection {
  string name = 1;
  string displayName = 2;
  string description = 3;
  repeated FieldConfig fieldConfigs = 4;
}

message PlatformFormSpec {
  repeated ConfigFormSection sections = 1;
}

message GetPlatformsRequest {
  string org_id = 1 [(buf.validate.field).string.uuid = true];
}

message GetPlatformsResponse {
  repeated Platform platforms = 1;
}

message GetPlatformResponse {
  Platform platform = 1;
}

message AddPlatformRequest {
  Platform platform = 1;
}

message GetPlatformRequest {
  string platform_id = 1 [(buf.validate.field).string.uuid = true];
}

message MetadataName {
  string name = 1;
}

message PlatformForm {
  string apiVersion = 1;
  string kind = 2;
  MetadataName metadata = 3;
  PlatformFormSpec spec = 4;
}

message PutPlatformConfigRequest {
  string platform_id = 1 [(buf.validate.field).string.uuid = true];
  ConfigValues values = 2;
}

message GetPlatformConfigRequest {
  string platform_id = 1 [(buf.validate.field).string.uuid = true];
}

service PlatformService {
  rpc AddPlatform(AddPlatformRequest) returns (GetPlatformsResponse) {}
  rpc GetPlatforms(GetPlatformsRequest) returns (GetPlatformsResponse) {}
  rpc GetPlatform(GetPlatformRequest) returns (GetPlatformResponse) {}
  rpc PutPlatformConfig(PutPlatformConfigRequest) returns (GetPlatformResponse) {}
  // GetConfig provides the unmarshalled config values for use with CUE
  rpc GetConfig(GetPlatformConfigRequest) returns (ConfigValues) {}
}
