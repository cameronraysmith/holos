syntax = "proto3";

package holos.user.v1alpha1;

option go_package = "github.com/holos-run/holos/service/gen/holos/user/v1alpha1;user";

// git clone https://github.com/bufbuild/protovalidate then add <parent>/protovalidate/proto/protovalidate to your editor proto search path
import "holos/user/v1alpha1/user.proto";
import "google/protobuf/field_mask.proto";
import "holos/object/v1alpha1/object.proto";


// Create a User from the oidc id token claims or the provided user.  Each one
// of subject, email, and user id must be globally unique.
message CreateUserRequest {
  // User resource to create.  If absent, the server populates User fields with
  // the oidc id token claims of the authenticated request.
  optional User user = 1;
}

message CreateUserResponse {
  User user = 1;
}

message GetUserRequest {
  // UserRef represents the user to return in the response.
  holos.object.v1alpha1.UserRef user = 1;
  // FieldMask represents the response User fields to include.
  optional google.protobuf.FieldMask field_mask = 2;
}

message GetUserResponse {
  User user = 1;
}

// UserService provides CRUD methods for User resources in the system.
service UserService {
  // Create a new user from authenticated claims or the provided User resource.
  rpc CreateUser(CreateUserRequest) returns (CreateUserResponse) {}
  // Get an existing user by id, email, or subject.
  rpc GetUser(GetUserRequest) returns (GetUserResponse) {}
}
