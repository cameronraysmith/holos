// Code generated by timoni. DO NOT EDIT.

//timoni:generate timoni vendor crd -f /home/jeff/workspace/holos-run/holos-infra/deploy/clusters/k2/components/prod-platform-monitoring/prod-platform-monitoring.gen.yaml

package v1alpha1

import "strings"

// ScrapeConfig defines a namespaced Prometheus scrape_config to
// be aggregated across multiple namespaces into the Prometheus
// configuration.
#ScrapeConfig: {
	// APIVersion defines the versioned schema of this representation
	// of an object. Servers should convert recognized schemas to the
	// latest internal value, and may reject unrecognized values.
	// More info:
	// https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	apiVersion: "monitoring.coreos.com/v1alpha1"

	// Kind is a string value representing the REST resource this
	// object represents. Servers may infer this from the endpoint
	// the client submits requests to. Cannot be updated. In
	// CamelCase. More info:
	// https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	kind: "ScrapeConfig"
	metadata!: {
		name!: strings.MaxRunes(253) & strings.MinRunes(1) & {
			string
		}
		namespace!: strings.MaxRunes(63) & strings.MinRunes(1) & {
			string
		}
		labels?: {
			[string]: string
		}
		annotations?: {
			[string]: string
		}
	}

	// ScrapeConfigSpec is a specification of the desired
	// configuration for a scrape configuration.
	spec!: #ScrapeConfigSpec
}

// ScrapeConfigSpec is a specification of the desired
// configuration for a scrape configuration.
#ScrapeConfigSpec: {
	// Authorization header to use on every scrape request.
	authorization?: {
		// Selects a key of a Secret in the namespace that contains the
		// credentials for authentication.
		credentials?: {
			// The key of the secret to select from. Must be a valid secret
			// key.
			key: string

			// Name of the referent. More info:
			// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
			// TODO: Add other useful fields. apiVersion, kind, uid?
			name?: string

			// Specify whether the Secret or its key must be defined
			optional?: bool
		}

		// Defines the authentication type. The value is case-insensitive.
		// "Basic" is not a supported value.
		// Default: "Bearer"
		type?: string
	}

	// AzureSDConfigs defines a list of Azure service discovery
	// configurations.
	azureSDConfigs?: [...{
		// # The authentication method, either OAuth or ManagedIdentity.
		// See
		// https://docs.microsoft.com/en-us/azure/active-directory/managed-identities-azure-resources/overview
		authenticationMethod?: "OAuth" | "ManagedIdentity"

		// Optional client ID. Only required with the OAuth authentication
		// method.
		clientID?: string

		// Optional client secret. Only required with the OAuth
		// authentication method.
		clientSecret?: {
			// The key of the secret to select from. Must be a valid secret
			// key.
			key: string

			// Name of the referent. More info:
			// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
			// TODO: Add other useful fields. apiVersion, kind, uid?
			name?: string

			// Specify whether the Secret or its key must be defined
			optional?: bool
		}

		// The Azure environment.
		environment?: string

		// The port to scrape metrics from. If using the public IP
		// address, this must instead be specified in the relabeling
		// rule.
		port?: int

		// RefreshInterval configures the refresh interval at which
		// Prometheus will re-read the instance list.
		refreshInterval?: =~"^(0|(([0-9]+)y)?(([0-9]+)w)?(([0-9]+)d)?(([0-9]+)h)?(([0-9]+)m)?(([0-9]+)s)?(([0-9]+)ms)?)$"

		// Optional resource group name. Limits discovery to this resource
		// group.
		resourceGroup?: string

		// The subscription ID. Always required.
		subscriptionID: strings.MinRunes(1)

		// Optional tenant ID. Only required with the OAuth authentication
		// method.
		tenantID?: string
	}]

	// BasicAuth information to use on every scrape request.
	basicAuth?: {
		// `password` specifies a key of a Secret containing the password
		// for authentication.
		password?: {
			// The key of the secret to select from. Must be a valid secret
			// key.
			key: string

			// Name of the referent. More info:
			// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
			// TODO: Add other useful fields. apiVersion, kind, uid?
			name?: string

			// Specify whether the Secret or its key must be defined
			optional?: bool
		}

		// `username` specifies a key of a Secret containing the username
		// for authentication.
		username?: {
			// The key of the secret to select from. Must be a valid secret
			// key.
			key: string

			// Name of the referent. More info:
			// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
			// TODO: Add other useful fields. apiVersion, kind, uid?
			name?: string

			// Specify whether the Secret or its key must be defined
			optional?: bool
		}
	}

	// ConsulSDConfigs defines a list of Consul service discovery
	// configurations.
	consulSDConfigs?: [...{
		// Allow stale Consul results (see
		// https://www.consul.io/api/features/consistency.html). Will
		// reduce load on Consul. If unset, Prometheus uses its default
		// value.
		allowStale?: bool

		// Authorization header configuration to authenticate against the
		// Consul Server.
		authorization?: {
			// Selects a key of a Secret in the namespace that contains the
			// credentials for authentication.
			credentials?: {
				// The key of the secret to select from. Must be a valid secret
				// key.
				key: string

				// Name of the referent. More info:
				// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
				// TODO: Add other useful fields. apiVersion, kind, uid?
				name?: string

				// Specify whether the Secret or its key must be defined
				optional?: bool
			}

			// Defines the authentication type. The value is case-insensitive.
			// "Basic" is not a supported value.
			// Default: "Bearer"
			type?: string
		}

		// BasicAuth information to authenticate against the Consul
		// Server. More info:
		// https://prometheus.io/docs/operating/configuration/#endpoints
		basicAuth?: {
			// `password` specifies a key of a Secret containing the password
			// for authentication.
			password?: {
				// The key of the secret to select from. Must be a valid secret
				// key.
				key: string

				// Name of the referent. More info:
				// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
				// TODO: Add other useful fields. apiVersion, kind, uid?
				name?: string

				// Specify whether the Secret or its key must be defined
				optional?: bool
			}

			// `username` specifies a key of a Secret containing the username
			// for authentication.
			username?: {
				// The key of the secret to select from. Must be a valid secret
				// key.
				key: string

				// Name of the referent. More info:
				// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
				// TODO: Add other useful fields. apiVersion, kind, uid?
				name?: string

				// Specify whether the Secret or its key must be defined
				optional?: bool
			}
		}

		// Consul Datacenter name, if not provided it will use the local
		// Consul Agent Datacenter.
		datacenter?: string

		// Whether to enable HTTP2. If unset, Prometheus uses its default
		// value.
		enableHTTP2?: bool

		// Configure whether HTTP requests follow HTTP 3xx redirects. If
		// unset, Prometheus uses its default value.
		followRedirects?: bool

		// Namespaces are only supported in Consul Enterprise.
		namespace?: string

		// `noProxy` is a comma-separated string that can contain IPs,
		// CIDR notation, domain names that should be excluded from
		// proxying. IP and domain names can contain port numbers.
		// It requires Prometheus >= v2.43.0.
		noProxy?: string

		// Node metadata key/value pairs to filter nodes for a given
		// service.
		nodeMeta?: {
			[string]: string
		}

		// Optional OAuth 2.0 configuration.
		oauth2?: {
			// `clientId` specifies a key of a Secret or ConfigMap containing
			// the OAuth2 client's ID.
			clientId: {
				// ConfigMap containing data to use for the targets.
				configMap?: {
					// The key to select.
					key: string

					// Name of the referent. More info:
					// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
					// TODO: Add other useful fields. apiVersion, kind, uid?
					name?: string

					// Specify whether the ConfigMap or its key must be defined
					optional?: bool
				}

				// Secret containing data to use for the targets.
				secret?: {
					// The key of the secret to select from. Must be a valid secret
					// key.
					key: string

					// Name of the referent. More info:
					// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
					// TODO: Add other useful fields. apiVersion, kind, uid?
					name?: string

					// Specify whether the Secret or its key must be defined
					optional?: bool
				}
			}

			// `clientSecret` specifies a key of a Secret containing the
			// OAuth2 client's secret.
			clientSecret: {
				// The key of the secret to select from. Must be a valid secret
				// key.
				key: string

				// Name of the referent. More info:
				// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
				// TODO: Add other useful fields. apiVersion, kind, uid?
				name?: string

				// Specify whether the Secret or its key must be defined
				optional?: bool
			}

			// `endpointParams` configures the HTTP parameters to append to
			// the token URL.
			endpointParams?: {
				[string]: string
			}

			// `scopes` defines the OAuth2 scopes used for the token request.
			scopes?: [...string]

			// `tokenURL` configures the URL to fetch the token from.
			tokenUrl: strings.MinRunes(1)
		}

		// Admin Partitions are only supported in Consul Enterprise.
		partition?: string

		// ProxyConnectHeader optionally specifies headers to send to
		// proxies during CONNECT requests.
		// It requires Prometheus >= v2.43.0.
		proxyConnectHeader?: {
			[string]: {
				// The key of the secret to select from. Must be a valid secret
				// key.
				key: string

				// Name of the referent. More info:
				// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
				// TODO: Add other useful fields. apiVersion, kind, uid?
				name?: string

				// Specify whether the Secret or its key must be defined
				optional?: bool
			}
		}

		// Whether to use the proxy configuration defined by environment
		// variables (HTTP_PROXY, HTTPS_PROXY, and NO_PROXY). If unset,
		// Prometheus uses its default value.
		// It requires Prometheus >= v2.43.0.
		proxyFromEnvironment?: bool

		// `proxyURL` defines the HTTP proxy server to use.
		// It requires Prometheus >= v2.43.0.
		proxyUrl?: =~"^http(s)?://.+$"

		// The time after which the provided names are refreshed. On large
		// setup it might be a good idea to increase this value because
		// the catalog will change all the time. If unset, Prometheus
		// uses its default value.
		refreshInterval?: =~"^(0|(([0-9]+)y)?(([0-9]+)w)?(([0-9]+)d)?(([0-9]+)h)?(([0-9]+)m)?(([0-9]+)s)?(([0-9]+)ms)?)$"

		// HTTP Scheme default "http"
		scheme?: "HTTP" | "HTTPS"

		// A valid string consisting of a hostname or IP followed by an
		// optional port number.
		server: strings.MinRunes(1)

		// A list of services for which targets are retrieved. If omitted,
		// all services are scraped.
		services?: [...string]

		// The string by which Consul tags are joined into the tag label.
		// If unset, Prometheus uses its default value.
		tagSeparator?: string

		// An optional list of tags used to filter nodes for a given
		// service. Services must contain all tags in the list.
		tags?: [...string]

		// TLS Config
		tlsConfig?: {
			// Certificate authority used when verifying server certificates.
			ca?: {
				// ConfigMap containing data to use for the targets.
				configMap?: {
					// The key to select.
					key: string

					// Name of the referent. More info:
					// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
					// TODO: Add other useful fields. apiVersion, kind, uid?
					name?: string

					// Specify whether the ConfigMap or its key must be defined
					optional?: bool
				}

				// Secret containing data to use for the targets.
				secret?: {
					// The key of the secret to select from. Must be a valid secret
					// key.
					key: string

					// Name of the referent. More info:
					// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
					// TODO: Add other useful fields. apiVersion, kind, uid?
					name?: string

					// Specify whether the Secret or its key must be defined
					optional?: bool
				}
			}

			// Client certificate to present when doing client-authentication.
			cert?: {
				// ConfigMap containing data to use for the targets.
				configMap?: {
					// The key to select.
					key: string

					// Name of the referent. More info:
					// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
					// TODO: Add other useful fields. apiVersion, kind, uid?
					name?: string

					// Specify whether the ConfigMap or its key must be defined
					optional?: bool
				}

				// Secret containing data to use for the targets.
				secret?: {
					// The key of the secret to select from. Must be a valid secret
					// key.
					key: string

					// Name of the referent. More info:
					// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
					// TODO: Add other useful fields. apiVersion, kind, uid?
					name?: string

					// Specify whether the Secret or its key must be defined
					optional?: bool
				}
			}

			// Disable target certificate validation.
			insecureSkipVerify?: bool

			// Secret containing the client key file for the targets.
			keySecret?: {
				// The key of the secret to select from. Must be a valid secret
				// key.
				key: string

				// Name of the referent. More info:
				// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
				// TODO: Add other useful fields. apiVersion, kind, uid?
				name?: string

				// Specify whether the Secret or its key must be defined
				optional?: bool
			}

			// Used to verify the hostname for the targets.
			serverName?: string
		}

		// Consul ACL TokenRef, if not provided it will use the ACL from
		// the local Consul Agent.
		tokenRef?: {
			// The key of the secret to select from. Must be a valid secret
			// key.
			key: string

			// Name of the referent. More info:
			// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
			// TODO: Add other useful fields. apiVersion, kind, uid?
			name?: string

			// Specify whether the Secret or its key must be defined
			optional?: bool
		}
	}]

	// DigitalOceanSDConfigs defines a list of DigitalOcean service
	// discovery configurations.
	digitalOceanSDConfigs?: [...{
		// Authorization header configuration to authenticate against the
		// DigitalOcean API. Cannot be set at the same time as `oauth2`.
		authorization?: {
			// Selects a key of a Secret in the namespace that contains the
			// credentials for authentication.
			credentials?: {
				// The key of the secret to select from. Must be a valid secret
				// key.
				key: string

				// Name of the referent. More info:
				// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
				// TODO: Add other useful fields. apiVersion, kind, uid?
				name?: string

				// Specify whether the Secret or its key must be defined
				optional?: bool
			}

			// Defines the authentication type. The value is case-insensitive.
			// "Basic" is not a supported value.
			// Default: "Bearer"
			type?: string
		}

		// Whether to enable HTTP2.
		enableHTTP2?: bool

		// Configure whether HTTP requests follow HTTP 3xx redirects.
		followRedirects?: bool

		// `noProxy` is a comma-separated string that can contain IPs,
		// CIDR notation, domain names that should be excluded from
		// proxying. IP and domain names can contain port numbers.
		// It requires Prometheus >= v2.43.0.
		noProxy?: string

		// Optional OAuth 2.0 configuration. Cannot be set at the same
		// time as `authorization`.
		oauth2?: {
			// `clientId` specifies a key of a Secret or ConfigMap containing
			// the OAuth2 client's ID.
			clientId: {
				// ConfigMap containing data to use for the targets.
				configMap?: {
					// The key to select.
					key: string

					// Name of the referent. More info:
					// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
					// TODO: Add other useful fields. apiVersion, kind, uid?
					name?: string

					// Specify whether the ConfigMap or its key must be defined
					optional?: bool
				}

				// Secret containing data to use for the targets.
				secret?: {
					// The key of the secret to select from. Must be a valid secret
					// key.
					key: string

					// Name of the referent. More info:
					// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
					// TODO: Add other useful fields. apiVersion, kind, uid?
					name?: string

					// Specify whether the Secret or its key must be defined
					optional?: bool
				}
			}

			// `clientSecret` specifies a key of a Secret containing the
			// OAuth2 client's secret.
			clientSecret: {
				// The key of the secret to select from. Must be a valid secret
				// key.
				key: string

				// Name of the referent. More info:
				// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
				// TODO: Add other useful fields. apiVersion, kind, uid?
				name?: string

				// Specify whether the Secret or its key must be defined
				optional?: bool
			}

			// `endpointParams` configures the HTTP parameters to append to
			// the token URL.
			endpointParams?: {
				[string]: string
			}

			// `scopes` defines the OAuth2 scopes used for the token request.
			scopes?: [...string]

			// `tokenURL` configures the URL to fetch the token from.
			tokenUrl: strings.MinRunes(1)
		}

		// The port to scrape metrics from.
		port?: int

		// ProxyConnectHeader optionally specifies headers to send to
		// proxies during CONNECT requests.
		// It requires Prometheus >= v2.43.0.
		proxyConnectHeader?: {
			[string]: {
				// The key of the secret to select from. Must be a valid secret
				// key.
				key: string

				// Name of the referent. More info:
				// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
				// TODO: Add other useful fields. apiVersion, kind, uid?
				name?: string

				// Specify whether the Secret or its key must be defined
				optional?: bool
			}
		}

		// Whether to use the proxy configuration defined by environment
		// variables (HTTP_PROXY, HTTPS_PROXY, and NO_PROXY). If unset,
		// Prometheus uses its default value.
		// It requires Prometheus >= v2.43.0.
		proxyFromEnvironment?: bool

		// `proxyURL` defines the HTTP proxy server to use.
		// It requires Prometheus >= v2.43.0.
		proxyUrl?: =~"^http(s)?://.+$"

		// Refresh interval to re-read the instance list.
		refreshInterval?: =~"^(0|(([0-9]+)y)?(([0-9]+)w)?(([0-9]+)d)?(([0-9]+)h)?(([0-9]+)m)?(([0-9]+)s)?(([0-9]+)ms)?)$"

		// TLS configuration applying to the target HTTP endpoint.
		tlsConfig?: {
			// Certificate authority used when verifying server certificates.
			ca?: {
				// ConfigMap containing data to use for the targets.
				configMap?: {
					// The key to select.
					key: string

					// Name of the referent. More info:
					// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
					// TODO: Add other useful fields. apiVersion, kind, uid?
					name?: string

					// Specify whether the ConfigMap or its key must be defined
					optional?: bool
				}

				// Secret containing data to use for the targets.
				secret?: {
					// The key of the secret to select from. Must be a valid secret
					// key.
					key: string

					// Name of the referent. More info:
					// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
					// TODO: Add other useful fields. apiVersion, kind, uid?
					name?: string

					// Specify whether the Secret or its key must be defined
					optional?: bool
				}
			}

			// Client certificate to present when doing client-authentication.
			cert?: {
				// ConfigMap containing data to use for the targets.
				configMap?: {
					// The key to select.
					key: string

					// Name of the referent. More info:
					// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
					// TODO: Add other useful fields. apiVersion, kind, uid?
					name?: string

					// Specify whether the ConfigMap or its key must be defined
					optional?: bool
				}

				// Secret containing data to use for the targets.
				secret?: {
					// The key of the secret to select from. Must be a valid secret
					// key.
					key: string

					// Name of the referent. More info:
					// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
					// TODO: Add other useful fields. apiVersion, kind, uid?
					name?: string

					// Specify whether the Secret or its key must be defined
					optional?: bool
				}
			}

			// Disable target certificate validation.
			insecureSkipVerify?: bool

			// Secret containing the client key file for the targets.
			keySecret?: {
				// The key of the secret to select from. Must be a valid secret
				// key.
				key: string

				// Name of the referent. More info:
				// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
				// TODO: Add other useful fields. apiVersion, kind, uid?
				name?: string

				// Specify whether the Secret or its key must be defined
				optional?: bool
			}

			// Used to verify the hostname for the targets.
			serverName?: string
		}
	}]

	// DNSSDConfigs defines a list of DNS service discovery
	// configurations.
	dnsSDConfigs?: [...{
		// A list of DNS domain names to be queried.
		names: [...string] & [_, ...]

		// The port number used if the query type is not SRV Ignored for
		// SRV records
		port?: int

		// RefreshInterval configures the time after which the provided
		// names are refreshed. If not set, Prometheus uses its default
		// value.
		refreshInterval?: =~"^(0|(([0-9]+)y)?(([0-9]+)w)?(([0-9]+)d)?(([0-9]+)h)?(([0-9]+)m)?(([0-9]+)s)?(([0-9]+)ms)?)$"

		// The type of DNS query to perform. One of SRV, A, AAAA, MX or
		// NS. If not set, Prometheus uses its default value.
		// When set to NS, It requires Prometheus >= 2.49.0.
		type?: "SRV" | "A" | "AAAA" | "MX" | "NS"
	}]

	// EC2SDConfigs defines a list of EC2 service discovery
	// configurations.
	ec2SDConfigs?: [...{
		// AccessKey is the AWS API key.
		accessKey?: {
			// The key of the secret to select from. Must be a valid secret
			// key.
			key: string

			// Name of the referent. More info:
			// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
			// TODO: Add other useful fields. apiVersion, kind, uid?
			name?: string

			// Specify whether the Secret or its key must be defined
			optional?: bool
		}

		// Filters can be used optionally to filter the instance list by
		// other criteria. Available filter criteria can be found here:
		// https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeInstances.html
		// Filter API documentation:
		// https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_Filter.html
		filters?: [...{
			name: string
			values: [...string]
		}]

		// The port to scrape metrics from. If using the public IP
		// address, this must instead be specified in the relabeling
		// rule.
		port?: int

		// RefreshInterval configures the refresh interval at which
		// Prometheus will re-read the instance list.
		refreshInterval?: =~"^(0|(([0-9]+)y)?(([0-9]+)w)?(([0-9]+)d)?(([0-9]+)h)?(([0-9]+)m)?(([0-9]+)s)?(([0-9]+)ms)?)$"

		// The AWS region
		region?: string

		// AWS Role ARN, an alternative to using AWS API keys.
		roleARN?: string

		// SecretKey is the AWS API secret.
		secretKey?: {
			// The key of the secret to select from. Must be a valid secret
			// key.
			key: string

			// Name of the referent. More info:
			// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
			// TODO: Add other useful fields. apiVersion, kind, uid?
			name?: string

			// Specify whether the Secret or its key must be defined
			optional?: bool
		}
	}]

	// When false, Prometheus will request uncompressed response from
	// the scraped target.
	// It requires Prometheus >= v2.49.0.
	// If unset, Prometheus uses true by default.
	enableCompression?: bool

	// FileSDConfigs defines a list of file service discovery
	// configurations.
	fileSDConfigs?: [...{
		// List of files to be used for file discovery. Recommendation:
		// use absolute paths. While relative paths work, the
		// prometheus-operator project makes no guarantees about the
		// working directory where the configuration file is stored.
		// Files must be mounted using Prometheus.ConfigMaps or
		// Prometheus.Secrets.
		files: [...=~"^[^*]*(\\*[^/]*)?\\.(json|yml|yaml|JSON|YML|YAML)$"] & [_, ...]

		// RefreshInterval configures the refresh interval at which
		// Prometheus will reload the content of the files.
		refreshInterval?: =~"^(0|(([0-9]+)y)?(([0-9]+)w)?(([0-9]+)d)?(([0-9]+)h)?(([0-9]+)m)?(([0-9]+)s)?(([0-9]+)ms)?)$"
	}]

	// GCESDConfigs defines a list of GCE service discovery
	// configurations.
	gceSDConfigs?: [...{
		// Filter can be used optionally to filter the instance list by
		// other criteria Syntax of this filter is described in the
		// filter query parameter section:
		// https://cloud.google.com/compute/docs/reference/latest/instances/list
		filter?: string

		// The port to scrape metrics from. If using the public IP
		// address, this must instead be specified in the relabeling
		// rule.
		port?: int

		// The Google Cloud Project ID
		project: strings.MinRunes(1)

		// RefreshInterval configures the refresh interval at which
		// Prometheus will re-read the instance list.
		refreshInterval?: =~"^(0|(([0-9]+)y)?(([0-9]+)w)?(([0-9]+)d)?(([0-9]+)h)?(([0-9]+)m)?(([0-9]+)s)?(([0-9]+)ms)?)$"

		// The tag separator is used to separate the tags on concatenation
		tagSeparator?: string

		// The zone of the scrape targets. If you need multiple zones use
		// multiple GCESDConfigs.
		zone: strings.MinRunes(1)
	}]

	// HonorLabels chooses the metric's labels on collisions with
	// target labels.
	honorLabels?: bool

	// HonorTimestamps controls whether Prometheus respects the
	// timestamps present in scraped data.
	honorTimestamps?: bool

	// HTTPSDConfigs defines a list of HTTP service discovery
	// configurations.
	httpSDConfigs?: [...{
		// Authorization header configuration to authenticate against the
		// target HTTP endpoint.
		authorization?: {
			// Selects a key of a Secret in the namespace that contains the
			// credentials for authentication.
			credentials?: {
				// The key of the secret to select from. Must be a valid secret
				// key.
				key: string

				// Name of the referent. More info:
				// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
				// TODO: Add other useful fields. apiVersion, kind, uid?
				name?: string

				// Specify whether the Secret or its key must be defined
				optional?: bool
			}

			// Defines the authentication type. The value is case-insensitive.
			// "Basic" is not a supported value.
			// Default: "Bearer"
			type?: string
		}

		// BasicAuth information to authenticate against the target HTTP
		// endpoint. More info:
		// https://prometheus.io/docs/operating/configuration/#endpoints
		basicAuth?: {
			// `password` specifies a key of a Secret containing the password
			// for authentication.
			password?: {
				// The key of the secret to select from. Must be a valid secret
				// key.
				key: string

				// Name of the referent. More info:
				// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
				// TODO: Add other useful fields. apiVersion, kind, uid?
				name?: string

				// Specify whether the Secret or its key must be defined
				optional?: bool
			}

			// `username` specifies a key of a Secret containing the username
			// for authentication.
			username?: {
				// The key of the secret to select from. Must be a valid secret
				// key.
				key: string

				// Name of the referent. More info:
				// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
				// TODO: Add other useful fields. apiVersion, kind, uid?
				name?: string

				// Specify whether the Secret or its key must be defined
				optional?: bool
			}
		}

		// `noProxy` is a comma-separated string that can contain IPs,
		// CIDR notation, domain names that should be excluded from
		// proxying. IP and domain names can contain port numbers.
		// It requires Prometheus >= v2.43.0.
		noProxy?: string

		// ProxyConnectHeader optionally specifies headers to send to
		// proxies during CONNECT requests.
		// It requires Prometheus >= v2.43.0.
		proxyConnectHeader?: {
			[string]: {
				// The key of the secret to select from. Must be a valid secret
				// key.
				key: string

				// Name of the referent. More info:
				// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
				// TODO: Add other useful fields. apiVersion, kind, uid?
				name?: string

				// Specify whether the Secret or its key must be defined
				optional?: bool
			}
		}

		// Whether to use the proxy configuration defined by environment
		// variables (HTTP_PROXY, HTTPS_PROXY, and NO_PROXY). If unset,
		// Prometheus uses its default value.
		// It requires Prometheus >= v2.43.0.
		proxyFromEnvironment?: bool

		// `proxyURL` defines the HTTP proxy server to use.
		// It requires Prometheus >= v2.43.0.
		proxyUrl?: =~"^http(s)?://.+$"

		// RefreshInterval configures the refresh interval at which
		// Prometheus will re-query the endpoint to update the target
		// list.
		refreshInterval?: =~"^(0|(([0-9]+)y)?(([0-9]+)w)?(([0-9]+)d)?(([0-9]+)h)?(([0-9]+)m)?(([0-9]+)s)?(([0-9]+)ms)?)$"

		// TLS configuration applying to the target HTTP endpoint.
		tlsConfig?: {
			// Certificate authority used when verifying server certificates.
			ca?: {
				// ConfigMap containing data to use for the targets.
				configMap?: {
					// The key to select.
					key: string

					// Name of the referent. More info:
					// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
					// TODO: Add other useful fields. apiVersion, kind, uid?
					name?: string

					// Specify whether the ConfigMap or its key must be defined
					optional?: bool
				}

				// Secret containing data to use for the targets.
				secret?: {
					// The key of the secret to select from. Must be a valid secret
					// key.
					key: string

					// Name of the referent. More info:
					// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
					// TODO: Add other useful fields. apiVersion, kind, uid?
					name?: string

					// Specify whether the Secret or its key must be defined
					optional?: bool
				}
			}

			// Client certificate to present when doing client-authentication.
			cert?: {
				// ConfigMap containing data to use for the targets.
				configMap?: {
					// The key to select.
					key: string

					// Name of the referent. More info:
					// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
					// TODO: Add other useful fields. apiVersion, kind, uid?
					name?: string

					// Specify whether the ConfigMap or its key must be defined
					optional?: bool
				}

				// Secret containing data to use for the targets.
				secret?: {
					// The key of the secret to select from. Must be a valid secret
					// key.
					key: string

					// Name of the referent. More info:
					// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
					// TODO: Add other useful fields. apiVersion, kind, uid?
					name?: string

					// Specify whether the Secret or its key must be defined
					optional?: bool
				}
			}

			// Disable target certificate validation.
			insecureSkipVerify?: bool

			// Secret containing the client key file for the targets.
			keySecret?: {
				// The key of the secret to select from. Must be a valid secret
				// key.
				key: string

				// Name of the referent. More info:
				// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
				// TODO: Add other useful fields. apiVersion, kind, uid?
				name?: string

				// Specify whether the Secret or its key must be defined
				optional?: bool
			}

			// Used to verify the hostname for the targets.
			serverName?: string
		}

		// URL from which the targets are fetched.
		url: strings.MinRunes(1) & {
			=~"^http(s)?://.+$"
		}
	}]

	// Per-scrape limit on the number of targets dropped by relabeling
	// that will be kept in memory. 0 means no limit.
	// It requires Prometheus >= v2.47.0.
	keepDroppedTargets?: int

	// KubernetesSDConfigs defines a list of Kubernetes service
	// discovery configurations.
	kubernetesSDConfigs?: [...{
		// The API server address consisting of a hostname or IP address
		// followed by an optional port number. If left empty, Prometheus
		// is assumed to run inside of the cluster. It will discover API
		// servers automatically and use the pod's CA certificate and
		// bearer token file at
		// /var/run/secrets/kubernetes.io/serviceaccount/.
		apiServer?: string
		attachMetadata?: {
			// Attaches node metadata to discovered targets. When set to true,
			// Prometheus must have the `get` permission on the `Nodes`
			// objects. Only valid for Pod, Endpoint and Endpointslice roles.
			node?: bool
		}

		// Authorization header to use on every scrape request. Cannot be
		// set at the same time as `basicAuth`, or `oauth2`.
		authorization?: {
			// Selects a key of a Secret in the namespace that contains the
			// credentials for authentication.
			credentials?: {
				// The key of the secret to select from. Must be a valid secret
				// key.
				key: string

				// Name of the referent. More info:
				// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
				// TODO: Add other useful fields. apiVersion, kind, uid?
				name?: string

				// Specify whether the Secret or its key must be defined
				optional?: bool
			}

			// Defines the authentication type. The value is case-insensitive.
			// "Basic" is not a supported value.
			// Default: "Bearer"
			type?: string
		}

		// BasicAuth information to use on every scrape request. Cannot be
		// set at the same time as `authorization`, or `oauth2`.
		basicAuth?: {
			// `password` specifies a key of a Secret containing the password
			// for authentication.
			password?: {
				// The key of the secret to select from. Must be a valid secret
				// key.
				key: string

				// Name of the referent. More info:
				// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
				// TODO: Add other useful fields. apiVersion, kind, uid?
				name?: string

				// Specify whether the Secret or its key must be defined
				optional?: bool
			}

			// `username` specifies a key of a Secret containing the username
			// for authentication.
			username?: {
				// The key of the secret to select from. Must be a valid secret
				// key.
				key: string

				// Name of the referent. More info:
				// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
				// TODO: Add other useful fields. apiVersion, kind, uid?
				name?: string

				// Specify whether the Secret or its key must be defined
				optional?: bool
			}
		}

		// Whether to enable HTTP2.
		enableHTTP2?: bool

		// Configure whether HTTP requests follow HTTP 3xx redirects.
		followRedirects?: bool

		// Optional namespace discovery. If omitted, Prometheus discovers
		// targets across all namespaces.
		namespaces?: {
			// List of namespaces where to watch for resources. If empty and
			// `ownNamespace` isn't true, Prometheus watches for resources in
			// all namespaces.
			names?: [...string]

			// Includes the namespace in which the Prometheus pod exists to
			// the list of watched namesapces.
			ownNamespace?: bool
		}

		// `noProxy` is a comma-separated string that can contain IPs,
		// CIDR notation, domain names that should be excluded from
		// proxying. IP and domain names can contain port numbers.
		// It requires Prometheus >= v2.43.0.
		noProxy?: string

		// Optional OAuth 2.0 configuration. Cannot be set at the same
		// time as `authorization`, or `basicAuth`.
		oauth2?: {
			// `clientId` specifies a key of a Secret or ConfigMap containing
			// the OAuth2 client's ID.
			clientId: {
				// ConfigMap containing data to use for the targets.
				configMap?: {
					// The key to select.
					key: string

					// Name of the referent. More info:
					// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
					// TODO: Add other useful fields. apiVersion, kind, uid?
					name?: string

					// Specify whether the ConfigMap or its key must be defined
					optional?: bool
				}

				// Secret containing data to use for the targets.
				secret?: {
					// The key of the secret to select from. Must be a valid secret
					// key.
					key: string

					// Name of the referent. More info:
					// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
					// TODO: Add other useful fields. apiVersion, kind, uid?
					name?: string

					// Specify whether the Secret or its key must be defined
					optional?: bool
				}
			}

			// `clientSecret` specifies a key of a Secret containing the
			// OAuth2 client's secret.
			clientSecret: {
				// The key of the secret to select from. Must be a valid secret
				// key.
				key: string

				// Name of the referent. More info:
				// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
				// TODO: Add other useful fields. apiVersion, kind, uid?
				name?: string

				// Specify whether the Secret or its key must be defined
				optional?: bool
			}

			// `endpointParams` configures the HTTP parameters to append to
			// the token URL.
			endpointParams?: {
				[string]: string
			}

			// `scopes` defines the OAuth2 scopes used for the token request.
			scopes?: [...string]

			// `tokenURL` configures the URL to fetch the token from.
			tokenUrl: strings.MinRunes(1)
		}

		// ProxyConnectHeader optionally specifies headers to send to
		// proxies during CONNECT requests.
		// It requires Prometheus >= v2.43.0.
		proxyConnectHeader?: {
			[string]: {
				// The key of the secret to select from. Must be a valid secret
				// key.
				key: string

				// Name of the referent. More info:
				// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
				// TODO: Add other useful fields. apiVersion, kind, uid?
				name?: string

				// Specify whether the Secret or its key must be defined
				optional?: bool
			}
		}

		// Whether to use the proxy configuration defined by environment
		// variables (HTTP_PROXY, HTTPS_PROXY, and NO_PROXY). If unset,
		// Prometheus uses its default value.
		// It requires Prometheus >= v2.43.0.
		proxyFromEnvironment?: bool

		// `proxyURL` defines the HTTP proxy server to use.
		// It requires Prometheus >= v2.43.0.
		proxyUrl?: =~"^http(s)?://.+$"

		// Role of the Kubernetes entities that should be discovered.
		role: "Node" | "node" | "Service" | "service" | "Pod" | "pod" | "Endpoints" | "endpoints" | "EndpointSlice" | "endpointslice" | "Ingress" | "ingress"

		// Selector to select objects.
		selectors?: [...{
			field?: string
			label?: string

			// Role is role of the service in Kubernetes.
			role: "Node" | "node" | "Service" | "service" | "Pod" | "pod" | "Endpoints" | "endpoints" | "EndpointSlice" | "endpointslice" | "Ingress" | "ingress"
		}]

		// TLS configuration to use on every scrape request.
		tlsConfig?: {
			// Certificate authority used when verifying server certificates.
			ca?: {
				// ConfigMap containing data to use for the targets.
				configMap?: {
					// The key to select.
					key: string

					// Name of the referent. More info:
					// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
					// TODO: Add other useful fields. apiVersion, kind, uid?
					name?: string

					// Specify whether the ConfigMap or its key must be defined
					optional?: bool
				}

				// Secret containing data to use for the targets.
				secret?: {
					// The key of the secret to select from. Must be a valid secret
					// key.
					key: string

					// Name of the referent. More info:
					// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
					// TODO: Add other useful fields. apiVersion, kind, uid?
					name?: string

					// Specify whether the Secret or its key must be defined
					optional?: bool
				}
			}

			// Client certificate to present when doing client-authentication.
			cert?: {
				// ConfigMap containing data to use for the targets.
				configMap?: {
					// The key to select.
					key: string

					// Name of the referent. More info:
					// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
					// TODO: Add other useful fields. apiVersion, kind, uid?
					name?: string

					// Specify whether the ConfigMap or its key must be defined
					optional?: bool
				}

				// Secret containing data to use for the targets.
				secret?: {
					// The key of the secret to select from. Must be a valid secret
					// key.
					key: string

					// Name of the referent. More info:
					// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
					// TODO: Add other useful fields. apiVersion, kind, uid?
					name?: string

					// Specify whether the Secret or its key must be defined
					optional?: bool
				}
			}

			// Disable target certificate validation.
			insecureSkipVerify?: bool

			// Secret containing the client key file for the targets.
			keySecret?: {
				// The key of the secret to select from. Must be a valid secret
				// key.
				key: string

				// Name of the referent. More info:
				// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
				// TODO: Add other useful fields. apiVersion, kind, uid?
				name?: string

				// Specify whether the Secret or its key must be defined
				optional?: bool
			}

			// Used to verify the hostname for the targets.
			serverName?: string
		}
	}]

	// Per-scrape limit on number of labels that will be accepted for
	// a sample. Only valid in Prometheus versions 2.27.0 and newer.
	labelLimit?: int

	// Per-scrape limit on length of labels name that will be accepted
	// for a sample. Only valid in Prometheus versions 2.27.0 and
	// newer.
	labelNameLengthLimit?: int

	// Per-scrape limit on length of labels value that will be
	// accepted for a sample. Only valid in Prometheus versions
	// 2.27.0 and newer.
	labelValueLengthLimit?: int

	// MetricRelabelConfigs to apply to samples before ingestion.
	metricRelabelings?: [...{
		// Action to perform based on the regex matching.
		// `Uppercase` and `Lowercase` actions require Prometheus >=
		// v2.36.0. `DropEqual` and `KeepEqual` actions require
		// Prometheus >= v2.41.0.
		// Default: "Replace"
		action?: "replace" | "Replace" | "keep" | "Keep" | "drop" | "Drop" | "hashmod" | "HashMod" | "labelmap" | "LabelMap" | "labeldrop" | "LabelDrop" | "labelkeep" | "LabelKeep" | "lowercase" | "Lowercase" | "uppercase" | "Uppercase" | "keepequal" | "KeepEqual" | "dropequal" | "DropEqual" | *"replace"

		// Modulus to take of the hash of the source label values.
		// Only applicable when the action is `HashMod`.
		modulus?: int

		// Regular expression against which the extracted value is
		// matched.
		regex?: string

		// Replacement value against which a Replace action is performed
		// if the regular expression matches.
		// Regex capture groups are available.
		replacement?: string

		// Separator is the string between concatenated SourceLabels.
		separator?: string

		// The source labels select values from existing labels. Their
		// content is concatenated using the configured Separator and
		// matched against the configured regular expression.
		sourceLabels?: [...=~"^[a-zA-Z_][a-zA-Z0-9_]*$"]

		// Label to which the resulting string is written in a
		// replacement.
		// It is mandatory for `Replace`, `HashMod`, `Lowercase`,
		// `Uppercase`, `KeepEqual` and `DropEqual` actions.
		// Regex capture groups are available.
		targetLabel?: string
	}]

	// MetricsPath HTTP path to scrape for metrics. If empty,
	// Prometheus uses the default value (e.g. /metrics).
	metricsPath?: string

	// `noProxy` is a comma-separated string that can contain IPs,
	// CIDR notation, domain names that should be excluded from
	// proxying. IP and domain names can contain port numbers.
	// It requires Prometheus >= v2.43.0.
	noProxy?: string

	// OpenStackSDConfigs defines a list of OpenStack service
	// discovery configurations.
	openstackSDConfigs?: [...{
		// Whether the service discovery should list all instances for all
		// projects. It is only relevant for the 'instance' role and
		// usually requires admin permissions.
		allTenants?: bool

		// ApplicationCredentialID
		applicationCredentialId?: string

		// The ApplicationCredentialID or ApplicationCredentialName fields
		// are required if using an application credential to
		// authenticate. Some providers allow you to create an
		// application credential to authenticate rather than a password.
		applicationCredentialName?: string

		// The applicationCredentialSecret field is required if using an
		// application credential to authenticate.
		applicationCredentialSecret?: {
			// The key of the secret to select from. Must be a valid secret
			// key.
			key: string

			// Name of the referent. More info:
			// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
			// TODO: Add other useful fields. apiVersion, kind, uid?
			name?: string

			// Specify whether the Secret or its key must be defined
			optional?: bool
		}

		// Availability of the endpoint to connect to.
		availability?: "Public" | "public" | "Admin" | "admin" | "Internal" | "internal"

		// DomainID
		domainID?: string

		// At most one of domainId and domainName must be provided if
		// using username with Identity V3. Otherwise, either are
		// optional.
		domainName?: string

		// IdentityEndpoint specifies the HTTP endpoint that is required
		// to work with the Identity API of the appropriate version.
		identityEndpoint?: string

		// Password for the Identity V2 and V3 APIs. Consult with your
		// provider's control panel to discover your account's preferred
		// method of authentication.
		password?: {
			// The key of the secret to select from. Must be a valid secret
			// key.
			key: string

			// Name of the referent. More info:
			// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
			// TODO: Add other useful fields. apiVersion, kind, uid?
			name?: string

			// Specify whether the Secret or its key must be defined
			optional?: bool
		}

		// The port to scrape metrics from. If using the public IP
		// address, this must instead be specified in the relabeling
		// rule.
		port?: int

		// ProjectID
		projectID?: string

		// The ProjectId and ProjectName fields are optional for the
		// Identity V2 API. Some providers allow you to specify a
		// ProjectName instead of the ProjectId. Some require both. Your
		// provider's authentication policies will determine how these
		// fields influence authentication.
		projectName?: string

		// Refresh interval to re-read the instance list.
		refreshInterval?: =~"^(0|(([0-9]+)y)?(([0-9]+)w)?(([0-9]+)d)?(([0-9]+)h)?(([0-9]+)m)?(([0-9]+)s)?(([0-9]+)ms)?)$"

		// The OpenStack Region.
		region: strings.MinRunes(1)

		// The OpenStack role of entities that should be discovered.
		role: "Instance" | "instance" | "Hypervisor" | "hypervisor"

		// TLS configuration applying to the target HTTP endpoint.
		tlsConfig?: {
			// Certificate authority used when verifying server certificates.
			ca?: {
				// ConfigMap containing data to use for the targets.
				configMap?: {
					// The key to select.
					key: string

					// Name of the referent. More info:
					// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
					// TODO: Add other useful fields. apiVersion, kind, uid?
					name?: string

					// Specify whether the ConfigMap or its key must be defined
					optional?: bool
				}

				// Secret containing data to use for the targets.
				secret?: {
					// The key of the secret to select from. Must be a valid secret
					// key.
					key: string

					// Name of the referent. More info:
					// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
					// TODO: Add other useful fields. apiVersion, kind, uid?
					name?: string

					// Specify whether the Secret or its key must be defined
					optional?: bool
				}
			}

			// Client certificate to present when doing client-authentication.
			cert?: {
				// ConfigMap containing data to use for the targets.
				configMap?: {
					// The key to select.
					key: string

					// Name of the referent. More info:
					// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
					// TODO: Add other useful fields. apiVersion, kind, uid?
					name?: string

					// Specify whether the ConfigMap or its key must be defined
					optional?: bool
				}

				// Secret containing data to use for the targets.
				secret?: {
					// The key of the secret to select from. Must be a valid secret
					// key.
					key: string

					// Name of the referent. More info:
					// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
					// TODO: Add other useful fields. apiVersion, kind, uid?
					name?: string

					// Specify whether the Secret or its key must be defined
					optional?: bool
				}
			}

			// Disable target certificate validation.
			insecureSkipVerify?: bool

			// Secret containing the client key file for the targets.
			keySecret?: {
				// The key of the secret to select from. Must be a valid secret
				// key.
				key: string

				// Name of the referent. More info:
				// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
				// TODO: Add other useful fields. apiVersion, kind, uid?
				name?: string

				// Specify whether the Secret or its key must be defined
				optional?: bool
			}

			// Used to verify the hostname for the targets.
			serverName?: string
		}

		// UserID
		userid?: string

		// Username is required if using Identity V2 API. Consult with
		// your provider's control panel to discover your account's
		// username. In Identity V3, either userid or a combination of
		// username and domainId or domainName are needed
		username?: string
	}]

	// Optional HTTP URL parameters
	params?: {
		[string]: [...string]
	}

	// ProxyConnectHeader optionally specifies headers to send to
	// proxies during CONNECT requests.
	// It requires Prometheus >= v2.43.0.
	proxyConnectHeader?: {
		[string]: {
			// The key of the secret to select from. Must be a valid secret
			// key.
			key: string

			// Name of the referent. More info:
			// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
			// TODO: Add other useful fields. apiVersion, kind, uid?
			name?: string

			// Specify whether the Secret or its key must be defined
			optional?: bool
		}
	}

	// Whether to use the proxy configuration defined by environment
	// variables (HTTP_PROXY, HTTPS_PROXY, and NO_PROXY). If unset,
	// Prometheus uses its default value.
	// It requires Prometheus >= v2.43.0.
	proxyFromEnvironment?: bool

	// `proxyURL` defines the HTTP proxy server to use.
	// It requires Prometheus >= v2.43.0.
	proxyUrl?: =~"^http(s)?://.+$"

	// RelabelConfigs defines how to rewrite the target's labels
	// before scraping. Prometheus Operator automatically adds
	// relabelings for a few standard Kubernetes fields. The original
	// scrape job's name is available via the
	// `__tmp_prometheus_job_name` label. More info:
	// https://prometheus.io/docs/prometheus/latest/configuration/configuration/#relabel_config
	relabelings?: [...{
		// Action to perform based on the regex matching.
		// `Uppercase` and `Lowercase` actions require Prometheus >=
		// v2.36.0. `DropEqual` and `KeepEqual` actions require
		// Prometheus >= v2.41.0.
		// Default: "Replace"
		action?: "replace" | "Replace" | "keep" | "Keep" | "drop" | "Drop" | "hashmod" | "HashMod" | "labelmap" | "LabelMap" | "labeldrop" | "LabelDrop" | "labelkeep" | "LabelKeep" | "lowercase" | "Lowercase" | "uppercase" | "Uppercase" | "keepequal" | "KeepEqual" | "dropequal" | "DropEqual" | *"replace"

		// Modulus to take of the hash of the source label values.
		// Only applicable when the action is `HashMod`.
		modulus?: int

		// Regular expression against which the extracted value is
		// matched.
		regex?: string

		// Replacement value against which a Replace action is performed
		// if the regular expression matches.
		// Regex capture groups are available.
		replacement?: string

		// Separator is the string between concatenated SourceLabels.
		separator?: string

		// The source labels select values from existing labels. Their
		// content is concatenated using the configured Separator and
		// matched against the configured regular expression.
		sourceLabels?: [...=~"^[a-zA-Z_][a-zA-Z0-9_]*$"]

		// Label to which the resulting string is written in a
		// replacement.
		// It is mandatory for `Replace`, `HashMod`, `Lowercase`,
		// `Uppercase`, `KeepEqual` and `DropEqual` actions.
		// Regex capture groups are available.
		targetLabel?: string
	}]

	// SampleLimit defines per-scrape limit on number of scraped
	// samples that will be accepted.
	sampleLimit?: int

	// Configures the protocol scheme used for requests. If empty,
	// Prometheus uses HTTP by default.
	scheme?: "HTTP" | "HTTPS"

	// The scrape class to apply.
	scrapeClass?: strings.MinRunes(1)

	// ScrapeInterval is the interval between consecutive scrapes.
	scrapeInterval?: =~"^(0|(([0-9]+)y)?(([0-9]+)w)?(([0-9]+)d)?(([0-9]+)h)?(([0-9]+)m)?(([0-9]+)s)?(([0-9]+)ms)?)$"

	// The protocols to negotiate during a scrape. It tells clients
	// the protocols supported by Prometheus in order of preference
	// (from most to least preferred).
	// If unset, Prometheus uses its default value.
	// It requires Prometheus >= v2.49.0.
	scrapeProtocols?: [..."PrometheusProto" | "OpenMetricsText0.0.1" | "OpenMetricsText1.0.0" | "PrometheusText0.0.4"]

	// ScrapeTimeout is the number of seconds to wait until a scrape
	// request times out.
	scrapeTimeout?: =~"^(0|(([0-9]+)y)?(([0-9]+)w)?(([0-9]+)d)?(([0-9]+)h)?(([0-9]+)m)?(([0-9]+)s)?(([0-9]+)ms)?)$"

	// StaticConfigs defines a list of static targets with a common
	// label set.
	staticConfigs?: [...{
		// Labels assigned to all metrics scraped from the targets.
		labels?: {
			[string]: string
		}

		// List of targets for this static configuration.
		targets?: [...string]
	}]

	// TargetLimit defines a limit on the number of scraped targets
	// that will be accepted.
	targetLimit?: int

	// TLS configuration to use on every scrape request
	tlsConfig?: {
		// Certificate authority used when verifying server certificates.
		ca?: {
			// ConfigMap containing data to use for the targets.
			configMap?: {
				// The key to select.
				key: string

				// Name of the referent. More info:
				// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
				// TODO: Add other useful fields. apiVersion, kind, uid?
				name?: string

				// Specify whether the ConfigMap or its key must be defined
				optional?: bool
			}

			// Secret containing data to use for the targets.
			secret?: {
				// The key of the secret to select from. Must be a valid secret
				// key.
				key: string

				// Name of the referent. More info:
				// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
				// TODO: Add other useful fields. apiVersion, kind, uid?
				name?: string

				// Specify whether the Secret or its key must be defined
				optional?: bool
			}
		}

		// Client certificate to present when doing client-authentication.
		cert?: {
			// ConfigMap containing data to use for the targets.
			configMap?: {
				// The key to select.
				key: string

				// Name of the referent. More info:
				// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
				// TODO: Add other useful fields. apiVersion, kind, uid?
				name?: string

				// Specify whether the ConfigMap or its key must be defined
				optional?: bool
			}

			// Secret containing data to use for the targets.
			secret?: {
				// The key of the secret to select from. Must be a valid secret
				// key.
				key: string

				// Name of the referent. More info:
				// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
				// TODO: Add other useful fields. apiVersion, kind, uid?
				name?: string

				// Specify whether the Secret or its key must be defined
				optional?: bool
			}
		}

		// Disable target certificate validation.
		insecureSkipVerify?: bool

		// Secret containing the client key file for the targets.
		keySecret?: {
			// The key of the secret to select from. Must be a valid secret
			// key.
			key: string

			// Name of the referent. More info:
			// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
			// TODO: Add other useful fields. apiVersion, kind, uid?
			name?: string

			// Specify whether the Secret or its key must be defined
			optional?: bool
		}

		// Used to verify the hostname for the targets.
		serverName?: string
	}

	// TrackTimestampsStaleness whether Prometheus tracks staleness of
	// the metrics that have an explicit timestamp present in scraped
	// data. Has no effect if `honorTimestamps` is false. It requires
	// Prometheus >= v2.48.0.
	trackTimestampsStaleness?: bool
}
